<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tangmo.emall.dao.ProductCommentDao" >
    
    <resultMap id="BaseComment" type="com.tangmo.emall.entity.ProductComment">
        <id column="comment_id" property="commentId" jdbcType="INTEGER" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="img_id" property="imgId" jdbcType="VARCHAR" />
        <result column="product_id" property="productId" jdbcType="INTEGER" />
        <result column="order_id" property="orderId" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="comment_star" property="commentStar" jdbcType="TINYINT" />
        <result column="audit_status" property="auditStatus" jdbcType="TINYINT" />
        <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
        <result column="upvote_num" property="upvoteNum" jdbcType="INTEGER" />
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
        <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
        <result column="thumb_up" property="thumbUp" jdbcType="INTEGER" />
        <result column="first_name" property="firstName" jdbcType="VARCHAR" />
        <result column="last_name" property="lastName" jdbcType="VARCHAR" />
        <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
        <result column="product_specs" property="productSpecs" jdbcType="VARCHAR" />
    </resultMap>
    
    <sql id="Base_Column_List">
        t_product_comment.comment_id,t_product_comment.content,t_product_comment.img_id,t_product_comment.product_id,
        t_product_comment.order_id,t_product_comment.user_id,t_product_comment.comment_star,t_product_comment.audit_status,
        t_product_comment.audit_time,t_product_comment.upvote_num,t_product_comment.created_time
    </sql>

    <insert id="addComment" parameterType="com.tangmo.emall.entity.ProductComment">
        insert into t_product_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="content != null">
                content,
            </if>
            <if test="imgId != null">
                img_id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="commentStar != null">
                comment_star,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="content != null">
                #{content},
            </if>
            <if test="imgId != null">
                #{imgId},
            </if>
            <if test="productId != null">
                #{productId},
            </if>
            <if test="orderId != null">
                #{orderId},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="commentStar != null">
                #{commentStar},
            </if>
        </trim>
    </insert>

    <select id="getCommentList" resultMap="BaseComment">
        select
        <include refid="Base_Column_List" />
        <if test="userId != null">
            ,(select count(*) from t_give where user_id = #{userId} and comment_id = t_product_comment.comment_id) AS thumb_up
        </if>
        ,t_user.first_name,t_user.last_name,t_order.pay_time,t_product_spec.product_specs
        from t_product_comment
        LEFT JOIN t_user
        on t_product_comment.user_id = t_user.user_id
        LEFT JOIN t_order
        on t_product_comment.order_id = t_order.order_sn
        INNER JOIN t_order_detail
        on t_order.order_id = t_order_detail.order_id
        LEFT JOIN t_product_spec
        on t_order_detail.spec_id = t_product_spec.spec_id
        where t_product_comment.audit_status = 1 AND t_product_comment.product_id = #{productId}
        <if test="sortingRules != null">${sortingRules}</if>
    </select>

    <update id="giveALike" parameterType="java.lang.Integer">
        update t_product_comment set upvote_num = upvote_num + 1 where comment_id = #{commentId}
    </update>

    <select id="getUserGiveCount" resultType="java.lang.Integer">
        select count(*) from t_give where user_id = #{userId} AND comment_id = #{commentId}
    </select>

    <insert id="addGive">
        insert into t_give(user_id,comment_id) values(#{userId},#{commentId})
    </insert>

    <select id="canYouComment" resultType="java.lang.String">
        select t_order.order_sn from t_order_detail
        INNER JOIN t_order
        on t_order_detail.order_id = t_order.order_id
        where t_order.user_id = #{userId} and t_order.order_status = 3 and t_order_detail.product_id = #{productId}
        ORDER BY t_order.created_time
        LIMIT 0,1
    </select>
</mapper>