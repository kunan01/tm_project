<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tangmo.zhygzhglxt.dao.TbDriverVerifyMapper">
    <resultMap id="BaseResultMap" type="com.tangmo.zhygzhglxt.entity.TbDriverVerify">
        <!--
          列匹配实体属性
        -->
        <id column="driver_verify_id" jdbcType="VARCHAR" property="driverVerifyId"/>
        <result column="driver_verify_code" jdbcType="VARCHAR" property="driverVerifyCode"/>
        <result column="driver_name" jdbcType="VARCHAR" property="driverName"/>
        <result column="driver_userid" jdbcType="VARCHAR" property="driverUserid"/>
        <result column="user_card" jdbcType="VARCHAR" property="userCard"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="car_number" jdbcType="VARCHAR" property="carNumber"/>
        <result column="company" jdbcType="VARCHAR" property="company"/>
        <result column="car_type" jdbcType="VARCHAR" property="carType"/>
        <result column="idcard_face" jdbcType="VARCHAR" property="idcardFace"/>
        <result column="idcard_back" jdbcType="VARCHAR" property="idcardBack"/>
        <result column="driver_icence" jdbcType="VARCHAR" property="driverIcence"/>
        <result column="License_plate" jdbcType="VARCHAR" property="licensePlate"/>
        <result column="certificate" jdbcType="VARCHAR" property="certificate"/>
        <result column="transport" jdbcType="VARCHAR" property="transport"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="flag" jdbcType="VARCHAR" property="flag"/>
        <result column="car_la" jdbcType="VARCHAR" property="carLa"/>
        <result column="car_lo" jdbcType="VARCHAR" property="carLo"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        driver_verify_id, driver_verify_code, driver_name, driver_userid, user_card, phone,
        car_number, company, car_type, idcard_face, idcard_back, driver_icence, License_plate,
        certificate, transport, state, create_time, update_time, flag, car_la, car_lo
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from tb_driver_verify
        where driver_verify_id = #{driverVerifyId,jdbcType=VARCHAR}
    </select>

    <!--
        根据车牌号查询
      -->
    <select id="selectByCarNumber" resultMap="BaseResultMap" parameterType="java.lang.String">

        select
        <include refid="Base_Column_List"/>
        from tb_driver_verify
        where car_number = #{carNumber,jdbcType=VARCHAR}
        AND flag = "0"
        AND car_type = "1018"

    </select>

    <!--
        根据code唯一标识查找审核信息
      -->
    <select id="selectByCode" resultMap="BaseResultMap" parameterType="java.lang.String">

        select
        <include refid="Base_Column_List"/>
        from tb_driver_verify
        where driver_verify_code = #{code,jdbcType=VARCHAR}
        AND flag = "0"

    </select>

    <!--
        根据司机用户的唯一标识实时查询当前的经度纬度
      -->
    <select id="selCarLaLoByUserCode" resultType="java.util.Map" parameterType="java.lang.String">

        select
        driver_userid driverUserCode,car_la carLa,car_lo carLo
        from tb_driver_verify
        where driver_userid = #{driverUserCode,jdbcType=VARCHAR}
        AND flag = "0"
        limit 0,1

    </select>

    <!--
        根据车牌号查询审核成功的司机
      -->
    <select id="selectByCarNumbers" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List"/>
        from tb_driver_verify
        where flag = "0"
        AND state = "1"
        AND car_number IN
        <foreach collection="list" open="(" close=")" item="item" index="index" separator=",">
            #{item}
        </foreach>

    </select>

    <!--
        后台可根据状态查询车主的审核信息（可分页）
      -->
    <select id="selDriverVerify" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List"/>
        from tb_driver_verify
        where driver_name LIKE #{name,jdbcType=VARCHAR}
        AND flag = "0"
        <if test="state != null">
            AND state = #{state,jdbcType=VARCHAR}
        </if>

    </select>


    <!--
        根据车用户的唯一标识code查找审核信息
      -->
    <select id="selectByUserCode" resultMap="BaseResultMap" parameterType="java.lang.String">

        select
        <include refid="Base_Column_List"/>
        from tb_driver_verify
        where driver_userid = #{userCode,jdbcType=VARCHAR}
        AND flag = "0"

    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from tb_driver_verify
        where driver_verify_id = #{driverVerifyId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.tangmo.zhygzhglxt.entity.TbDriverVerify">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into tb_driver_verify (driver_verify_id, driver_verify_code,
        driver_name, driver_userid, user_card,
        phone, car_number, company,
        car_type, idcard_face, idcard_back,
        driver_icence, License_plate, certificate,
        transport, state, create_time,
        update_time, flag)
        values (#{driverVerifyId,jdbcType=VARCHAR}, #{driverVerifyCode,jdbcType=VARCHAR},
        #{driverName,jdbcType=VARCHAR}, #{driverUserid,jdbcType=VARCHAR}, #{userCard,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR}, #{carNumber,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR},
        #{carType,jdbcType=VARCHAR}, #{idcardFace,jdbcType=VARCHAR}, #{idcardBack,jdbcType=VARCHAR},
        #{driverIcence,jdbcType=VARCHAR}, #{licensePlate,jdbcType=VARCHAR}, #{certificate,jdbcType=VARCHAR},
        #{transport,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=VARCHAR})
    </insert>

    <!--
        单个车主的审核信息动态添加
      -->
    <insert id="insertSelective" parameterType="com.tangmo.zhygzhglxt.entity.TbDriverVerify">

        insert into tb_driver_verify
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="driverVerifyId != null">
                driver_verify_id,
            </if>
            <if test="driverVerifyCode != null">
                driver_verify_code,
            </if>
            <if test="driverName != null">
                driver_name,
            </if>
            <if test="driverUserid != null">
                driver_userid,
            </if>
            <if test="userCard != null">
                user_card,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="carNumber != null">
                car_number,
            </if>
            <if test="company != null">
                company,
            </if>
            <if test="carType != null">
                car_type,
            </if>
            <if test="idcardFace != null">
                idcard_face,
            </if>
            <if test="idcardBack != null">
                idcard_back,
            </if>
            <if test="driverIcence != null">
                driver_icence,
            </if>
            <if test="licensePlate != null">
                License_plate,
            </if>
            <if test="certificate != null">
                certificate,
            </if>
            <if test="transport != null">
                transport,
            </if>
            <if test="state != null">
                state,
            </if>
            create_time,
            update_time,
            <if test="flag != null">
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="driverVerifyId != null">
                #{driverVerifyId,jdbcType=VARCHAR},
            </if>
            <if test="driverVerifyCode != null">
                #{driverVerifyCode,jdbcType=VARCHAR},
            </if>
            <if test="driverName != null">
                #{driverName,jdbcType=VARCHAR},
            </if>
            <if test="driverUserid != null">
                #{driverUserid,jdbcType=VARCHAR},
            </if>
            <if test="userCard != null">
                #{userCard,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="carNumber != null">
                #{carNumber,jdbcType=VARCHAR},
            </if>
            <if test="company != null">
                #{company,jdbcType=VARCHAR},
            </if>
            <if test="carType != null">
                #{carType,jdbcType=VARCHAR},
            </if>
            <if test="idcardFace != null">
                #{idcardFace,jdbcType=VARCHAR},
            </if>
            <if test="idcardBack != null">
                #{idcardBack,jdbcType=VARCHAR},
            </if>
            <if test="driverIcence != null">
                #{driverIcence,jdbcType=VARCHAR},
            </if>
            <if test="licensePlate != null">
                #{licensePlate,jdbcType=VARCHAR},
            </if>
            <if test="certificate != null">
                #{certificate,jdbcType=VARCHAR},
            </if>
            <if test="transport != null">
                #{transport,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            now(),
            now(),
            <if test="flag != null">
                #{flag,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.tangmo.zhygzhglxt.entity.TbDriverVerify">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update tb_driver_verify
        <set>
            <if test="driverVerifyCode != null">
                driver_verify_code = #{driverVerifyCode,jdbcType=VARCHAR},
            </if>
            <if test="driverName != null">
                driver_name = #{driverName,jdbcType=VARCHAR},
            </if>
            <if test="driverUserid != null">
                driver_userid = #{driverUserid,jdbcType=VARCHAR},
            </if>
            <if test="userCard != null">
                user_card = #{userCard,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="carNumber != null">
                car_number = #{carNumber,jdbcType=VARCHAR},
            </if>
            <if test="company != null">
                company = #{company,jdbcType=VARCHAR},
            </if>
            <if test="carType != null">
                car_type = #{carType,jdbcType=VARCHAR},
            </if>
            <if test="idcardFace != null">
                idcard_face = #{idcardFace,jdbcType=VARCHAR},
            </if>
            <if test="idcardBack != null">
                idcard_back = #{idcardBack,jdbcType=VARCHAR},
            </if>
            <if test="driverIcence != null">
                driver_icence = #{driverIcence,jdbcType=VARCHAR},
            </if>
            <if test="licensePlate != null">
                License_plate = #{licensePlate,jdbcType=VARCHAR},
            </if>
            <if test="certificate != null">
                certificate = #{certificate,jdbcType=VARCHAR},
            </if>
            <if test="transport != null">
                transport = #{transport,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=VARCHAR},
            </if>
        </set>
        where driver_verify_id = #{driverVerifyId,jdbcType=VARCHAR}
    </update>

    <!--
          根据车主审核的唯一标识来修改车主审核信息
     -->
    <update id="updateByDriverVerifyCode" parameterType="com.tangmo.zhygzhglxt.entity.TbDriverVerify">

        update tb_driver_verify
        <set>
            <if test="driverName != null">
                driver_name = #{driverName,jdbcType=VARCHAR},
            </if>
            <if test="driverUserid != null">
                driver_userid = #{driverUserid,jdbcType=VARCHAR},
            </if>
            <if test="userCard != null">
                user_card = #{userCard,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="carNumber != null">
                car_number = #{carNumber,jdbcType=VARCHAR},
            </if>
            <if test="company != null">
                company = #{company,jdbcType=VARCHAR},
            </if>
            <if test="carType != null">
                car_type = #{carType,jdbcType=VARCHAR},
            </if>
            <if test="idcardFace != null">
                idcard_face = #{idcardFace,jdbcType=VARCHAR},
            </if>
            <if test="idcardBack != null">
                idcard_back = #{idcardBack,jdbcType=VARCHAR},
            </if>
            <if test="driverIcence != null">
                driver_icence = #{driverIcence,jdbcType=VARCHAR},
            </if>
            <if test="licensePlate != null">
                License_plate = #{licensePlate,jdbcType=VARCHAR},
            </if>
            <if test="certificate != null">
                certificate = #{certificate,jdbcType=VARCHAR},
            </if>
            <if test="transport != null">
                transport = #{transport,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            now(),
            <if test="flag != null">
                flag = #{flag,jdbcType=VARCHAR},
            </if>
        </set>
        where driver_verify_code = #{driverVerifyCode,jdbcType=VARCHAR}
    </update>


    <update id="updateByPrimaryKey" parameterType="com.tangmo.zhygzhglxt.entity.TbDriverVerify">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update tb_driver_verify
        set driver_verify_code = #{driverVerifyCode,jdbcType=VARCHAR},
        driver_name = #{driverName,jdbcType=VARCHAR},
        driver_userid = #{driverUserid,jdbcType=VARCHAR},
        user_card = #{userCard,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        car_number = #{carNumber,jdbcType=VARCHAR},
        company = #{company,jdbcType=VARCHAR},
        car_type = #{carType,jdbcType=VARCHAR},
        idcard_face = #{idcardFace,jdbcType=VARCHAR},
        idcard_back = #{idcardBack,jdbcType=VARCHAR},
        driver_icence = #{driverIcence,jdbcType=VARCHAR},
        License_plate = #{licensePlate,jdbcType=VARCHAR},
        certificate = #{certificate,jdbcType=VARCHAR},
        transport = #{transport,jdbcType=VARCHAR},
        state = #{state,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        flag = #{flag,jdbcType=VARCHAR}
        where driver_verify_id = #{driverVerifyId,jdbcType=VARCHAR}
    </update>

    <!--
        审核车主信息 state 1代表通过 2代表驳回
      -->
    <update id="verifyDriver">

        update tb_driver_verify
        set
        state = #{state,jdbcType=VARCHAR},
        update_time = now()
        where driver_verify_code = #{code,jdbcType=VARCHAR}
    </update>

    <!--
        实时更新车主的经度纬度
      -->
    <update id="updateCarLaLo">

        update tb_driver_verify
        set
        car_la = #{carLa,jdbcType=VARCHAR},
        car_lo = #{carLo,jdbcType=VARCHAR}
        where driver_userid = #{userCode,jdbcType=VARCHAR}
    </update>

    <!--
        概念性删除车主的审核信息
      -->
    <update id="delDriverVerifyByCode">

        update tb_driver_verify
        set
        flag = "1",
        update_time = now()
        where driver_verify_code = #{code,jdbcType=VARCHAR}

    </update>


    <!--根据唯一标识code查找车主详细信息-->
    <select id="jtQueryById" resultMap="BaseResultMap">

        SELECT
        driver_verify_id,
        driver_verify_code,
        driver_userid,
        driver_icence,
        License_plate,
        certificate,
        transport,
        state,
        create_time,
        update_time,
        flag,
        car_type,
        phone,
        service_type_id,
        car_length,
        car_heavy
        FROM tb_driver_verify
        WHERE flag = 0
        AND state = 1
        AND driver_verify_code = #{code}

    </select>

    <!--后台查询所有车主信息-->
    <select id="jtQueryList" resultMap="BaseResultMap">

        SELECT
        driver_verify_id,
        driver_verify_code,
        driver_userid,
        driver_icence,
        License_plate,
        certificate,
        transport,
        state,
        create_time,
        update_time,
        flag,
        car_type,
        phone,
        service_type_id,
        car_length,
        car_heavy
        FROM tb_driver_verify
        WHERE flag = 0
        AND (create_time LIKE #{name} or update_time LIKE #{name})
        AND state =#{state}

    </select>
    <select id="getDriverByPassengerOrder" resultType="java.util.Map">
        select
        tdo.driver_id as driverId,tdo.driver_order_code as driverNumber,
        tdv.driver_name as driverName,tdv.phone as driverPhone,tdv.car_number as carNumber,
        tdv.company as company,tdv.car_type as carType
        from
        tb_driver_order tdo
        left join
        tb_driver_verify tdv
        on tdo.driver_id = tdv.driver_userid
        where tdo.passenger_order_code = #{passengerOrder}
        limit 0,1
    </select>


</mapper>